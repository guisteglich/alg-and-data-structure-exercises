class Stacks:
    
    def __init__(self):
        self.values = []
        
    def put(self, value):
        self.values.append(value)
    
    def get(self):
        return self.values.pop()

def isBalanced(s):
    stack = Stacks()
    dict = {'(': ')', 
            '{': '}', 
            '[': ']'}
    # Write your code here
    for elem in s:
        if elem in dict:
            stack.put(elem)
        else:
            if len(stack.values) == 0:
                return 'NO'
            elif elem != dict[stack.get()]:
                return 'NO'
    return "YES"
    
# print(isBalanced('{[()]}'))
# print(isBalanced('{[(])}'))

# print(isBalanced("}][}}(}][))]"))
# print(isBalanced("[](){()}"))
# print(isBalanced("()"))
# print(isBalanced("({}([][]))[]()"))
# print(isBalanced("{)[](}]}]}))}(())("))
# print(isBalanced("([[)"))

gabarito = '''
YES
NO
NO
NO
NO
NO
NO
NO
NO
YES
YES
YES
NO
YES
NO
YES
NO
YES
NO'''

elementos = ['()[{}()]([[][]()[[]]]{()})([]()){[]{}}{{}}{}(){([[{}([]{})]])}',

'{][({(}]][[[{}]][[[())}[)(]([[[)][[))[}[]][()}))](]){}}})}[{]{}{((}]}{{)[{[){{)[]]}))]()]})))[',

'[)](][[([]))[)',

']}]){[{{){',

'{[(}{)]]){(}}(][{{)]{[(((}{}{)}[({[}[}((}{()}[]})]}]]))((]][[{{}[(}})[){()}}{(}{{({{}[[]})]{((]{[){[',

'()}}[(}])][{]{()([}[}{}[{[]{]](]][[))(()[}(}{[{}[[]([{](]{}{[){()[{[{}}{[{()(()({}([[}[}[{(]})',

'){[])[](){[)}[)]}]]){](]()]({{)(]])(]{(}(}{)}])){[{}((){[({(()[[}](]})]}({)}{)]{{{',

'[(})])}{}}]{({[]]]))]})]',

'[{',

'{}([{()[]{{}}}])({})',

'{({}{[({({})([[]])}({}))({})]})}',

'()[]',

'{)[])}]){){]}[(({[)[{{[((]{()[]}][([(]}{](])()(}{(]}{})[)))[](){({)][}()((',

'[][(([{}])){}]{}[()]{([[{[()]({}[])()()}[{}][]]])}',

'(}]}',

'(([{()}]))[({[{}{}[]]{}})]{((){}{()}){{}}}{}{{[{[][]([])}[()({}())()({[]}{{[[]]([])}})()]]}}',

'[(([){[](}){){]]}{}([](([[)}[)})[(()[]){})}}]][({[}])}{(({}}{{{{])({]]}[[{{(}}][{)([)]}}',

'()()[()([{[()][]{}(){()({[]}[(((){(())}))]()){}}}])]']

for elem in elementos:
    print(isBalanced(elem))







